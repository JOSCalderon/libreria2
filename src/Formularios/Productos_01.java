/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Entidades.Cargarproductos;
import Entidades.CargarproductosJpaController;
import Entidades.Categoria;
import Entidades.CategoriaJpaController;
import Entidades.Cliente;
import Entidades.Empleado;
import Entidades.EmpleadoJpaController;
import Entidades.EntityMain;
import Entidades.Producto;
import Entidades.ProductoJpaController;
import Entidades.Proveedor;
import Entidades.ProveedorJpaController;
import Entidades.Tipoempleado;
import Entidades.TipoempleadoJpaController;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose
 */
public class Productos_01 extends javax.swing.JFrame {

   ProductoJpaController CProducto = new ProductoJpaController(EntityMain.getInstance());
   CargarproductosJpaController CargarProducto = new CargarproductosJpaController(EntityMain.getInstance());
   
    CategoriaJpaController CCategoria = new CategoriaJpaController(EntityMain.getInstance());
    List<Categoria> listCategorias = CCategoria.findCategoriaEntities();
    
    ProveedorJpaController CProveedor = new ProveedorJpaController(EntityMain.getInstance());
    List<Proveedor> listProveedores= CProveedor.findProveedorEntities();
    SimpleDateFormat formatoDeFecha = new SimpleDateFormat("dd-MM-yyyy");
    DefaultTableModel modelo;
    int contar = 0;
    boolean registroExiste = false;
    boolean hayvacio=false;
    
    
    public Productos_01() {
        initComponents();
        CrearModelo();
        CargarProductos();
        ContarProducto();
        LlenarComboCategoria();
        LlenarComboProveedor();
        DesactivarCajas();
        
        
        btnGuardar.setEnabled(false);
        //prueba combo
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblDui = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtPrecioVenta = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtInventario = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblNit = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        txtExistenciaLote = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtExistenciaMinima = new javax.swing.JTextField();
        lblTelefono = new javax.swing.JLabel();
        btnNuevo2 = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        lblfecha = new javax.swing.JLabel();
        lblTipoEmpleado = new javax.swing.JLabel();
        cmbCategorias = new javax.swing.JComboBox<>();
        lblMensaje = new javax.swing.JLabel();
        cmbProveedores = new javax.swing.JComboBox<>();
        btnCerrar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1339, 710));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Productos");

        lblDui.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDui.setText("Existencia Minima");

        txtId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtId.setEnabled(false);

        txtPrecioVenta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPrecioVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioVentaKeyTyped(evt);
            }
        });

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtInventario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInventarioActionPerformed(evt);
            }
        });
        txtInventario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInventarioKeyTyped(evt);
            }
        });

        lblId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblId.setText("Id");

        lblNit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNit.setText("Inventario");

        lblNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNombre.setText("Nombre");

        lblApellidos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblApellidos.setText("Marca");

        lblDireccion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDireccion.setText("Existencia Lote");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla);

        txtExistenciaLote.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtExistenciaLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExistenciaLoteActionPerformed(evt);
            }
        });
        txtExistenciaLote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtExistenciaLoteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExistenciaLoteKeyTyped(evt);
            }
        });

        txtMarca.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtExistenciaMinima.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtExistenciaMinima.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExistenciaMinimaKeyTyped(evt);
            }
        });

        lblTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTelefono.setText("Precio Venta");

        btnNuevo2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNuevo2.setText("Nuevo");
        btnNuevo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevo2ActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        lblfecha.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblfecha.setText("Proveedor");

        lblTipoEmpleado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTipoEmpleado.setText("Categoria");

        cmbCategorias.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbCategorias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoriasActionPerformed(evt);
            }
        });

        cmbProveedores.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbProveedores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProveedoresActionPerformed(evt);
            }
        });

        btnCerrar1.setText("Salir");
        btnCerrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(452, 452, 452)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(278, 278, 278)
                .addComponent(lblMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1093, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnNuevo2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCerrar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId)
                            .addComponent(lblNombre)
                            .addComponent(lblApellidos))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtId)
                                .addGap(38, 38, 38)
                                .addComponent(lblTipoEmpleado)
                                .addGap(18, 18, 18)
                                .addComponent(cmbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMarca, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTelefono)
                                    .addComponent(lblDireccion)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(lblfecha)))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtExistenciaLote, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(lblDui)
                                .addGap(26, 26, 26))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblNit)
                                .addGap(33, 33, 33)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtExistenciaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(67, 67, 67)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMensaje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTipoEmpleado)
                            .addComponent(lblId)
                            .addComponent(cmbCategorias, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelefono)
                            .addComponent(lblNombre))
                        .addGap(39, 39, 39)
                        .addComponent(lblApellidos))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblfecha)
                            .addComponent(cmbProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtExistenciaLote, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtExistenciaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblDui)
                                    .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNit))))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(btnNuevo2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CrearModelo() {
        try {
            modelo = (new DefaultTableModel(
                    null, new String[]{
                        "id Producto","Nombre","Marca","Categoria", "Proveedor","Precio Venta"
                        ,"Existencia Minima ","Existencia Lote","Inventario" }) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            tabla.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString() + "error2");
        }
    }

    private void CargarProductos() {

        try {
            Object O[] = null;
            List<Cargarproductos> listProductos = CargarProducto.findCargarproductosEntities();
            
            
            

            for (int i = 0; i < listProductos.size(); i++) {
                modelo.addRow(O);
                modelo.setValueAt(listProductos.get(i).getIdproducto(), i, 0);
                modelo.setValueAt(listProductos.get(i).getNombre(), i, 1);
                modelo.setValueAt(listProductos.get(i).getMarca(), i, 2);
                modelo.setValueAt(listProductos.get(i).getCategoria(), i, 3);
                modelo.setValueAt(listProductos.get(i).getProveedor(), i, 4);
                modelo.setValueAt(listProductos.get(i).getPrecioventa(), i, 5);
                modelo.setValueAt(listProductos.get(i).getExistenciaminima(), i, 6);
                modelo.setValueAt(listProductos.get(i).getExistencialote(), i, 7);
                modelo.setValueAt(listProductos.get(i).getIdinventario(), i, 8);

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error" + e.toString());

        }
    }
    
     private void Guardar() {
         
        

        Integer id = Integer.parseInt(this.txtId.getText());
        Integer categoria = cmbCategorias.getSelectedIndex() + 1;
        String nombre = this.txtNombre.getText();
        String marca = this.txtMarca.getText();
        Integer proveedor = cmbProveedores.getSelectedIndex() + 1;
        Integer existenciaLote = Integer.parseInt(this.txtExistenciaLote.getText());
        Double precioVenta = Double.parseDouble(this.txtPrecioVenta.getText());
        
        Integer existenciaMinima = Integer.parseInt(this.txtExistenciaMinima.getText());
        Integer inventario = Integer.parseInt(this.txtInventario.getText());

        Producto produc = new Producto();

        produc.setIdproducto(BigDecimal.valueOf(id));
        produc.setIdcategoria(BigInteger.valueOf(categoria));
        produc.setNombre(nombre);
        produc.setMarca(marca);
        produc.setIdproveedor(BigInteger.valueOf(proveedor));
        produc.setExistencialote(BigInteger.valueOf(existenciaLote));
        produc.setPrecioventa(BigDecimal.valueOf(precioVenta));
        produc.setExistenciaminima(BigInteger.valueOf(existenciaMinima));
        produc.setIdinventario(BigInteger.valueOf(inventario));
      
        try {
            
            CProducto.create(produc);
            JOptionPane.showMessageDialog(null, "Datos Registrados correctamente");
           

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error" + e.toString());
        }
    }

    public void Actualizar() {
        try {
           Integer id = Integer.parseInt(this.txtId.getText());
        Integer categoria = cmbCategorias.getSelectedIndex() + 1;
        String nombre = this.txtNombre.getText();
        String marca = this.txtMarca.getText();
        Integer proveedor = cmbProveedores.getSelectedIndex() + 1;
        Integer existenciaLote = Integer.parseInt(this.txtExistenciaLote.getText());
        Double precioVenta = Double.parseDouble(this.txtPrecioVenta.getText());
        
        Integer existenciaMinima = Integer.parseInt(this.txtExistenciaMinima.getText());
        Integer inventario = Integer.parseInt(this.txtInventario.getText());

        Producto produc = new Producto();

        produc.setIdproducto(BigDecimal.valueOf(id));
        produc.setIdcategoria(BigInteger.valueOf(categoria));
        produc.setNombre(nombre);
        produc.setMarca(marca);
        produc.setIdproveedor(BigInteger.valueOf(proveedor));
        produc.setExistencialote(BigInteger.valueOf(existenciaLote));
        produc.setPrecioventa(BigDecimal.valueOf(precioVenta));
        produc.setExistenciaminima(BigInteger.valueOf(existenciaMinima));
        produc.setIdinventario(BigInteger.valueOf(inventario));

            CProducto.edit(produc);
            JOptionPane.showMessageDialog(null, "Datos Actualizados correctamente");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage() + "error");
        }

    }
      
    public void BuscarExistente() {

        Integer id = Integer.parseInt(this.txtId.getText());
        Producto registro = CProducto.findProducto(BigDecimal.valueOf(id));

        if (registro != null) {
            registroExiste = true;
        } else {
            registroExiste = false;
        }
    }
    
     public void ContarProducto() {
         contar = CProducto.getProductoCount();
        this.txtId.setText(String.valueOf(contar + 1));
        
        
    }
    
    
    public void ActivarCajas(){
        this.txtMarca.setEnabled(true);
        this.txtNombre.setEnabled(true);
        this.txtExistenciaLote.setEnabled(true);
        this.txtExistenciaMinima.setEnabled(true);
        this.txtInventario.setEnabled(true);
        //this.txtFechaIngreso.setEnabled(true);
        this.txtPrecioVenta.setEnabled(true);
    }
     public void DesactivarCajas(){
        this.txtMarca.setEnabled(false);
        this.txtNombre.setEnabled(false);
        this.txtExistenciaLote.setEnabled(false);
        this.txtExistenciaMinima.setEnabled(false);
        this.txtInventario.setEnabled(false);
        //this.txtFechaIngreso.setEnabled(false);
        this.txtPrecioVenta.setEnabled(false);
    }
    public void Limpiar(){
        this.txtId.setText("");
        this.txtMarca.setText("");
        this.txtNombre.setText("");
        this.txtExistenciaLote.setText("");
        this.txtExistenciaMinima.setText("");
        this.txtInventario.setText("");
        //this.txtFechaIngreso.setText("");
        this.txtPrecioVenta.setText("");
    }
   
    public void ValidarDecimales(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        

        if (c == KeyEvent.VK_BACK_SPACE){
        evt.consume();
        
        }else if ((c < '0' || c > '9')&&c!='.') {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Debe Ingresar Solo numeros");
        }
    }
    public void ValidarNumeros(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        

        if (c == KeyEvent.VK_BACK_SPACE){
        evt.consume();
        
        }else if (c < '0' || c > '9') {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Debe Ingresar Solo numeros");
        }
    }
    
    
    public void ValidarVacio(){
               
        if (txtNombre.getText().length() == 0) {
            hayvacio = true;

        } else if (txtMarca.getText().length() == 0) {
            hayvacio = true;
        } else if (txtPrecioVenta.getText().length() == 0) {
            hayvacio = true;
        } else if (txtExistenciaMinima.getText().length() == 0) {
            hayvacio = true;
        } else if (txtExistenciaLote.getText().length() == 0) {
            hayvacio = true;
        } else if (txtExistenciaMinima.getText().length() == 0) {
            hayvacio = true;
        }

    }
    
    

    DefaultComboBoxModel combo1  = new DefaultComboBoxModel();
    private void LlenarComboCategoria(){
          cmbCategorias.setModel(combo1);
         for (int i=0; i<listCategorias.size(); i++){
         combo1.addElement(listCategorias.get(i).getNpmbrecategoria());
         }
    
    }
       DefaultComboBoxModel combo2  = new DefaultComboBoxModel();
      private void LlenarComboProveedor(){
          cmbProveedores.setModel(combo2);
         for (int i=0; i<listProveedores.size(); i++){
         combo2.addElement(listProveedores.get(i).getNombre());
         }
    
    }
    
    private void txtPrecioVentaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioVentaKeyTyped
        ValidarDecimales(evt);
    }//GEN-LAST:event_txtPrecioVentaKeyTyped

    private void txtInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInventarioActionPerformed
        
    }//GEN-LAST:event_txtInventarioActionPerformed

    private void txtInventarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInventarioKeyTyped
         ValidarDecimales(evt);
    }//GEN-LAST:event_txtInventarioKeyTyped

    private void txtExistenciaLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExistenciaLoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExistenciaLoteActionPerformed

    private void txtExistenciaMinimaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExistenciaMinimaKeyTyped
         ValidarNumeros(evt);
    }//GEN-LAST:event_txtExistenciaMinimaKeyTyped

    private void btnNuevo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevo2ActionPerformed
        Limpiar();
        ContarProducto();
        
        ActivarCajas();
        btnGuardar.setEnabled(true);
    }//GEN-LAST:event_btnNuevo2ActionPerformed

    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        BuscarExistente();
        ValidarVacio();
        
        
        if (registroExiste == true) {
            Actualizar();
            Limpiar();
            CargarProductos();
            ContarProducto();

        } else {
            if (hayvacio==false){
             Guardar();
            }else{
             JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
            }
           Limpiar();
           CargarProductos();
           ContarProducto();
        }
             
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int numero1, numero2 = 0;
        btnGuardar.setEnabled(true);
        ActivarCajas();

        txtId.setText(tabla.getValueAt(tabla.getSelectedRow(), 0).toString());
        txtNombre.setText(tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
        txtMarca.setText(tabla.getValueAt(tabla.getSelectedRow(), 2).toString());

        String valor1 = (tabla.getValueAt(tabla.getSelectedRow(), 3).toString());
        String valor2 = (tabla.getValueAt(tabla.getSelectedRow(), 4).toString());
//        numero1 = Integer.parseInt(valor1) - 1;
//        numero2 = Integer.parseInt(valor2) - 1;
        
        cmbCategorias.setSelectedItem(valor1);
        cmbProveedores.setSelectedItem(valor2);
        txtPrecioVenta.setText(tabla.getValueAt(tabla.getSelectedRow(), 5).toString());
        txtExistenciaMinima.setText(tabla.getValueAt(tabla.getSelectedRow(), 6).toString());
        txtExistenciaLote.setText(tabla.getValueAt(tabla.getSelectedRow(), 7).toString());
        txtInventario.setText(tabla.getValueAt(tabla.getSelectedRow(), 8).toString());

    }//GEN-LAST:event_btnEditarActionPerformed

    private void cmbCategoriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoriasActionPerformed
      //  lblMensaje.setText(String.valueOf(cmbTipoEmpleado.getSelectedItem()));
        
    }//GEN-LAST:event_cmbCategoriasActionPerformed

    private void cmbProveedoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProveedoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProveedoresActionPerformed

    private void txtExistenciaLoteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExistenciaLoteKeyTyped
        ValidarNumeros(evt);
    }//GEN-LAST:event_txtExistenciaLoteKeyTyped

    private void txtExistenciaLoteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExistenciaLoteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtExistenciaLoteKeyReleased

    private void btnCerrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrar1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrar1ActionPerformed

   
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Productos_01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Productos_01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Productos_01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Productos_01.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Productos_01().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar1;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo2;
    private javax.swing.JComboBox<String> cmbCategorias;
    private javax.swing.JComboBox<String> cmbProveedores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblDui;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JLabel lblNit;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTipoEmpleado;
    private javax.swing.JLabel lblfecha;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtExistenciaLote;
    private javax.swing.JTextField txtExistenciaMinima;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtInventario;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecioVenta;
    // End of variables declaration//GEN-END:variables
}
