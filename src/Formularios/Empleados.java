/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Entidades.Cliente;
import Entidades.Empleado;
import Entidades.EmpleadoJpaController;
import Entidades.EntityMain;
import Entidades.Pruebaempleado;
import Entidades.PruebaempleadoJpaController;
import Entidades.Tipoempleado;
import Entidades.TipoempleadoJpaController;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose
 */
public class Empleados extends javax.swing.JFrame {
    
     PruebaempleadoJpaController CPEmpleado = new PruebaempleadoJpaController(EntityMain.getInstance());

    EmpleadoJpaController CEmpleado = new EmpleadoJpaController(EntityMain.getInstance());
    TipoempleadoJpaController CTipoEmpleado = new TipoempleadoJpaController(EntityMain.getInstance());
    List<Tipoempleado> listTipoEmpleado = CTipoEmpleado.findTipoempleadoEntities();
    
    
    SimpleDateFormat formatoDeFecha = new SimpleDateFormat("dd-MM-yyyy");
    DefaultTableModel modelo;
    int contar = 0;
    boolean registroExiste = false;
     boolean hayvacio=false;
    
    
    
    public Empleados() {
        initComponents();
        CrearModelo();
        CargarEmpleados();
        ContarEmpleados();
        LlenarCombo();
        DesactivarCajas();
        
        btnGuardar.setEnabled(false);
        //prueba combo
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblDui = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        lblNit = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        txtDireccion = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        lblTelefono = new javax.swing.JLabel();
        btnNuevo2 = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        lblfecha = new javax.swing.JLabel();
        lblTipoEmpleado = new javax.swing.JLabel();
        cmbTipoEmpleado = new javax.swing.JComboBox<>();
        lblMensaje = new javax.swing.JLabel();
        txtFechaIngreso = new javax.swing.JFormattedTextField();
        txtTelefono = new javax.swing.JFormattedTextField();
        txtNit = new javax.swing.JFormattedTextField();
        txtDui = new javax.swing.JFormattedTextField();
        btnCerrar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Empleados");

        lblDui.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDui.setText("DUI");

        txtId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtId.setEnabled(false);

        txtNombres.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblId.setText("Id");

        lblNit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNit.setText("NIT");

        lblNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNombre.setText("Nombres");

        lblApellidos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblApellidos.setText("Apellidos");

        lblDireccion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblDireccion.setText("Direcci√≥n");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabla);

        txtDireccion.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });

        txtApellidos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTelefono.setText("Telefono");

        btnNuevo2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNuevo2.setText("Nuevo");
        btnNuevo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevo2ActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        lblfecha.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblfecha.setText("Fecha Ingreso");

        lblTipoEmpleado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTipoEmpleado.setText("Tipo Empleado");

        cmbTipoEmpleado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbTipoEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoEmpleadoActionPerformed(evt);
            }
        });

        try {
            txtFechaIngreso.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFechaIngreso.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtFechaIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaIngresoActionPerformed(evt);
            }
        });

        try {
            txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefono.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        try {
            txtNit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-######-###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNit.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        try {
            txtDui.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDui.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        btnCerrar1.setText("Salir");
        btnCerrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1093, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(btnNuevo2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCerrar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId)
                            .addComponent(lblNombre))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(lblTipoEmpleado)
                                .addGap(18, 18, 18)
                                .addComponent(cmbTipoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtNombres)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDireccion)
                        .addGap(53, 53, 53)
                        .addComponent(txtDireccion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblApellidos)
                        .addGap(54, 54, 54)
                        .addComponent(txtApellidos)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDui)
                            .addComponent(lblNit))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNit, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDui, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblfecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(296, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(452, 452, 452)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTelefono)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(278, 278, 278)
                .addComponent(lblMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMensaje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTipoEmpleado)
                            .addComponent(lblId)
                            .addComponent(cmbTipoEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblfecha)
                            .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDui, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtNit))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblTelefono)
                                .addGap(33, 33, 33)
                                .addComponent(lblDui))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNombre)
                                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblApellidos))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDireccion, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNit, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(btnNuevo2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(btnCerrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CrearModelo() {
        try {
            modelo = (new DefaultTableModel(
                    null, new String[]{
                        "Id","TipoEmpleado", "Nombres",
                        "Apellidos","FechaIngreso ","Direccion", "Telefono", "DUI", "NIT"}) {
                Class[] types = new Class[]{
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class,
                    java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false, false, false, false
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int colIndex) {
                    return canEdit[colIndex];
                }
            });
            tabla.setModel(modelo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString() + "error2");
        }
    }

    private void CargarEmpleados() {

        try {
            Object O[] = null;
            List<Pruebaempleado> listEmpleados = CPEmpleado.findPruebaempleadoEntities();

            for (int i = 0; i < listEmpleados.size(); i++) {
                modelo.addRow(O);
                modelo.setValueAt(listEmpleados.get(i).getIdempleado(), i, 0);
                modelo.setValueAt(listEmpleados.get(i).getTipoempleado(), i, 1);
                modelo.setValueAt(listEmpleados.get(i).getNombres(), i, 2);
                modelo.setValueAt(listEmpleados.get(i).getApellidos(), i, 3);
                modelo.setValueAt(listEmpleados.get(i).getFechaingreso(), i, 4);
                modelo.setValueAt(listEmpleados.get(i).getDireccion(), i, 5);
                modelo.setValueAt(listEmpleados.get(i).getTelefono(), i, 6);
                modelo.setValueAt(listEmpleados.get(i).getDui(), i, 7);
                modelo.setValueAt(listEmpleados.get(i).getNit(), i, 8);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error" + e.toString());

        }
    }
    
     private void Guardar() {

        Integer id = Integer.parseInt(this.txtId.getText());
        Integer idtipo = cmbTipoEmpleado.getSelectedIndex() + 1;
        String nombres = this.txtNombres.getText();
        String apellidos = this.txtApellidos.getText();
        String direccion = this.txtDireccion.getText();
        String telefono = this.txtTelefono.getText();
        String dui = this.txtDui.getText();
        String nit = this.txtNit.getText();

      // SimpleDateFormat formatoDelTexto = new SimpleDateFormat("dd-MM-yyyy");
        String strFecha = this.txtFechaIngreso.getText();
        Date fecha = null;
        try {
            fecha = formatoDeFecha.parse(strFecha);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        Empleado emp = new Empleado();

        emp.setIdempleado(BigDecimal.valueOf(id));
        emp.setIdtipoempleado(BigInteger.valueOf(idtipo));
        emp.setNombres(nombres);
        emp.setFechaingreso(fecha);
        emp.setApellidos(apellidos);
        emp.setDireccion(direccion);
        emp.setTelefono(telefono);
        emp.setDui(dui);
        emp.setNit(nit);

        try {
            CEmpleado.create(emp);
            JOptionPane.showMessageDialog(null, "Datos Registrados correctamente");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error" + e.toString());
        }
    }

    public void Actualizar() {
        try {
            Integer id = Integer.parseInt(this.txtId.getText());
            Integer idtipo = cmbTipoEmpleado.getSelectedIndex() + 1;
            String nombres = this.txtNombres.getText();
            String apellidos = this.txtApellidos.getText();
            String direccion = this.txtDireccion.getText();
            String telefono = this.txtTelefono.getText();
            String dui = this.txtDui.getText();
            String nit = this.txtNit.getText();

            
            String strFecha = this.txtFechaIngreso.getText();
            Date fecha = null;
            try {
                fecha = formatoDeFecha.parse(strFecha);
            } catch (ParseException ex) {
                ex.printStackTrace();
            }

            Empleado emp = new Empleado();

            emp.setIdempleado(BigDecimal.valueOf(id));
            emp.setIdtipoempleado(BigInteger.valueOf(idtipo));
            emp.setNombres(nombres);
            emp.setFechaingreso(fecha);
            emp.setApellidos(apellidos);
            emp.setDireccion(direccion);
            emp.setTelefono(telefono);
            emp.setDui(dui);
            emp.setNit(nit);

            CEmpleado.edit(emp);
            JOptionPane.showMessageDialog(null, "Datos Actualizados correctamente");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage() + "error");
        }

    }
      
    public void BuscarExistente() {

        Integer id = Integer.parseInt(this.txtId.getText());
        Empleado registro = CEmpleado.findEmpleado(BigDecimal.valueOf(id));

        if (registro != null) {
            registroExiste = true;
        } else {
            registroExiste = false;
        }
    }
    
     public void ContarEmpleados() {
        contar = CEmpleado.getEmpleadoCount();
        this.txtId.setText(String.valueOf(contar + 1));
    }
    
    
    public void ActivarCajas(){
        this.txtApellidos.setEnabled(true);
        this.txtNombres.setEnabled(true);
        this.txtDireccion.setEnabled(true);
        this.txtDui.setEnabled(true);
        this.txtNit.setEnabled(true);
        this.txtFechaIngreso.setEnabled(true);
        this.txtTelefono.setEnabled(true);
    }
     public void DesactivarCajas(){
        this.txtApellidos.setEnabled(false);
        this.txtNombres.setEnabled(false);
        this.txtDireccion.setEnabled(false);
        this.txtDui.setEnabled(false);
        this.txtNit.setEnabled(false);
        this.txtFechaIngreso.setEnabled(false);
        this.txtTelefono.setEnabled(false);
    }
    public void Limpiar(){
        this.txtId.setText("");
        this.txtApellidos.setText("");
        this.txtNombres.setText("");
        this.txtDireccion.setText("");
        this.txtDui.setText("");
        this.txtNit.setText("");
        this.txtFechaIngreso.setText("");
        this.txtTelefono.setText("");
    }
   
    public void ValidarNumeros(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();

        if (c == KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        } else if (c < '0' || c > '9') {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Debe Ingresar Solo numeros");
        }
    }
    public void ValidarFEcha(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();

        if (c == KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        } else if (c < '0' || c > '9') {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Debe Ingresar Solo numeros");
        }
    }
    

    DefaultComboBoxModel combo  = new DefaultComboBoxModel();
    private void LlenarCombo(){
          cmbTipoEmpleado.setModel(combo);
         for (int i=0; i<listTipoEmpleado.size(); i++){
         combo.addElement(listTipoEmpleado.get(i).getTipoempleado());
         }
    
    }
    
    public void ValidarVacio(){
        
        
        if (txtNombres.getText().length()==0){
            hayvacio=true;
        
        }else if (txtApellidos.getText().length()==0){
            hayvacio=true;
       
       }else if (txtDireccion.getText().length()==0){
            hayvacio=true;
       }
     
    }
    
    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void btnNuevo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevo2ActionPerformed
        Limpiar();
        this.txtId.setText(String.valueOf(contar + 1));
        ActivarCajas();
        btnGuardar.setEnabled(true);
    }//GEN-LAST:event_btnNuevo2ActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
         BuscarExistente();
        ValidarVacio();
              
        if (registroExiste == true) {
            Actualizar();
            Limpiar();
            CargarEmpleados();
            ContarEmpleados();

        } else {
            if (hayvacio == false) {
                Guardar();
            } else {
                JOptionPane.showMessageDialog(null, "Debe llenar todos los campos");
            }
            Limpiar();
            CargarEmpleados();
            ContarEmpleados();
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
         int numero = 0;
        btnGuardar.setEnabled(true);
        ActivarCajas();
       

        txtId.setText(tabla.getValueAt(tabla.getSelectedRow(), 0).toString());
        
        String valor = (tabla.getValueAt(tabla.getSelectedRow(), 1).toString());
       // numero = Integer.parseInt(valor) - 1;
        cmbTipoEmpleado.setSelectedItem(valor);
        
        txtNombres.setText(tabla.getValueAt(tabla.getSelectedRow(), 2).toString());
        txtApellidos.setText(tabla.getValueAt(tabla.getSelectedRow(), 3).toString());
        txtFechaIngreso.setText(tabla.getValueAt(tabla.getSelectedRow(), 4).toString());
        txtDireccion.setText(tabla.getValueAt(tabla.getSelectedRow(), 5).toString());

        txtTelefono.setText(tabla.getValueAt(tabla.getSelectedRow(), 6).toString());
        txtDui.setText(tabla.getValueAt(tabla.getSelectedRow(), 7).toString());
        txtNit.setText(tabla.getValueAt(tabla.getSelectedRow(), 8).toString());
       
    }//GEN-LAST:event_btnEditarActionPerformed

    private void cmbTipoEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoEmpleadoActionPerformed
      //  lblMensaje.setText(String.valueOf(cmbTipoEmpleado.getSelectedItem()));
        
    }//GEN-LAST:event_cmbTipoEmpleadoActionPerformed

    private void txtFechaIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaIngresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaIngresoActionPerformed

    private void btnCerrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrar1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrar1ActionPerformed

   
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Empleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Empleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnCerrar1;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo2;
    private javax.swing.JComboBox<String> cmbTipoEmpleado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblDui;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JLabel lblNit;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTipoEmpleado;
    private javax.swing.JLabel lblfecha;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JFormattedTextField txtDui;
    private javax.swing.JFormattedTextField txtFechaIngreso;
    private javax.swing.JTextField txtId;
    private javax.swing.JFormattedTextField txtNit;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JFormattedTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
